{"version":3,"sources":["src/common.speech/SpeechContext.ts"],"names":[],"mappings":"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","file":"SpeechContext.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    DynamicGrammarBuilder,\r\n} from \"./Exports.js\";\r\nimport { Dgi } from \"./ServiceMessages/Dgi/Dgi.js\";\r\nimport { RecognitionMode } from \"./ServiceMessages/PhraseDetection/PhraseDetectionContext.js\";\r\nimport { OutputFormat, PhraseOption } from \"./ServiceMessages/PhraseOutput/PhraseOutput.js\";\r\nimport { PronunciationAssessmentOptions } from \"./ServiceMessages/PronunciationScore/PronunciationAssessmentOptions.js\";\r\n\r\nimport { SpeechContext as SpeechServiceContext } from \"./ServiceMessages/SpeechContext.js\";\r\n\r\n/**\r\n * Represents the JSON used in the speech.context message sent to the speech service.\r\n * The dynamic grammar is always refreshed from the encapsulated dynamic grammar object.\r\n */\r\nexport class SpeechContext {\r\n    private privContext: SpeechServiceContext = {};\r\n    private privDynamicGrammar: DynamicGrammarBuilder;\r\n\r\n    public constructor(dynamicGrammar: DynamicGrammarBuilder) {\r\n        this.privDynamicGrammar = dynamicGrammar;\r\n    }\r\n\r\n    public getContext(): SpeechServiceContext {\r\n        return this.privContext;\r\n    }\r\n\r\n    /**\r\n     * @Internal\r\n     * This is only used by pronunciation assessment config.\r\n     * Do not use externally, object returned will change without warning or notice.\r\n     */\r\n    public setPronunciationAssessmentParams(params: string,\r\n        contentAssessmentTopic: string,\r\n        isSpeakerDiarizationEnabled: boolean = false): void {\r\n        if (this.privContext.phraseDetection === undefined) {\r\n            this.privContext.phraseDetection = {\r\n                enrichment: {\r\n                    pronunciationAssessment: {}\r\n                }\r\n            };\r\n        }\r\n        if (this.privContext.phraseDetection.enrichment === undefined) {\r\n            this.privContext.phraseDetection.enrichment = {\r\n                pronunciationAssessment: {}\r\n            };\r\n        }\r\n        this.privContext.phraseDetection.enrichment.pronunciationAssessment = JSON.parse(params) as PronunciationAssessmentOptions || {};\r\n        if (isSpeakerDiarizationEnabled) {\r\n            this.privContext.phraseDetection.mode = RecognitionMode.Conversation;\r\n        }\r\n        this.setWordLevelTimings();\r\n        this.privContext.phraseOutput.detailed.options.push(PhraseOption.PronunciationAssessment);\r\n        if (this.privContext.phraseOutput.detailed.options.indexOf(PhraseOption.SNR) === -1) {\r\n            this.privContext.phraseOutput.detailed.options.push(PhraseOption.SNR);\r\n        }\r\n        if (!!contentAssessmentTopic) {\r\n            this.privContext.phraseDetection.enrichment.contentAssessment = {\r\n                topic: contentAssessmentTopic\r\n            };\r\n            this.privContext.phraseOutput.detailed.options.push(PhraseOption.ContentAssessment);\r\n        }\r\n    }\r\n\r\n    public setDetailedOutputFormat(): void {\r\n        if (this.privContext.phraseOutput === undefined) {\r\n            this.privContext.phraseOutput = {\r\n                detailed: {\r\n                    options: []\r\n                }\r\n            };\r\n        }\r\n        if (this.privContext.phraseOutput.detailed === undefined) {\r\n            this.privContext.phraseOutput.detailed = {\r\n                options: []\r\n            };\r\n        }\r\n        this.privContext.phraseOutput.format = OutputFormat.Detailed;\r\n    }\r\n\r\n    public setWordLevelTimings(): void {\r\n        if (this.privContext.phraseOutput === undefined) {\r\n            this.privContext.phraseOutput = {\r\n                detailed: {\r\n                    options: []\r\n                }\r\n            };\r\n        }\r\n        if (this.privContext.phraseOutput.detailed === undefined) {\r\n            this.privContext.phraseOutput.detailed = {\r\n                options: []\r\n            };\r\n        }\r\n        this.privContext.phraseOutput.format = OutputFormat.Detailed;\r\n        if (this.privContext.phraseOutput.detailed.options.indexOf(PhraseOption.WordTimings) === -1) {\r\n            this.privContext.phraseOutput.detailed.options.push(PhraseOption.WordTimings);\r\n        }\r\n    }\r\n\r\n    public setSpeakerDiarizationAudioOffsetMs(audioOffsetMs: number): void {\r\n        this.privContext.phraseDetection.speakerDiarization.audioOffsetMs = audioOffsetMs;\r\n    }\r\n\r\n    public toJSON(): string {\r\n\r\n        const dgi: Dgi = this.privDynamicGrammar.generateGrammarObject();\r\n        this.privContext.dgi = dgi;\r\n\r\n        const ret: string = JSON.stringify(this.privContext);\r\n        return ret;\r\n    }\r\n}\r\n"]}