{"version":3,"sources":["src/common.speech/ServiceMessages/Dgi/Hints.ts"],"names":[],"mappings":";AAAA,EAAE;AACF,gDAAgD;AAChD,wGAAwG;AACxG,EAAE;;;AAEF;;GAEG;AACH,IAAY,UAMX;AAND,WAAY,UAAU;IAClB,iCAAmB,CAAA;IACnB,2BAAa,CAAA;IACb,iCAAmB,CAAA;IACnB,uCAAyB,CAAA;IACzB,iCAAmB,CAAA;AACvB,CAAC,EANW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAMrB;AAED;;GAEG;AACH,IAAY,cAGX;AAHD,WAAY,cAAc;IACtB,+BAAa,CAAA;IACb,2CAAyB,CAAA;AAC7B,CAAC,EAHW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAGzB","file":"Hints.js","sourcesContent":["//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\n/**\r\n * Represents the type of the IntentEntity.\r\n */\r\nexport enum EntityType {\r\n    Unknown = \"Unknown\",\r\n    Open = \"Open\",\r\n    BuiltIn = \"BuiltIn\",\r\n    ClosedList = \"ClosedList\",\r\n    Dynamic = \"Dynamic\"\r\n}\r\n\r\n/**\r\n * Substring match for IntentText.\r\n */\r\nexport enum SubStringMatch {\r\n    None = \"None\",\r\n    LeftRooted = \"LeftRooted\"\r\n}\r\n\r\n/**\r\n * Internal class representing Hints in the DGI v1 Grammar.\r\n */\r\nexport interface Hints {\r\n    /**\r\n     * Gets the EntityType of an IntentEntity.\r\n     * Required when Type=IntentEntity.\r\n     */\r\n    entityType: EntityType;\r\n\r\n    /**\r\n     * Gets the Name of an IntentEntity.\r\n     * Required when Type=IntentEntity.\r\n     */\r\n    entityName?: string;\r\n\r\n    /**\r\n     * Gets the synonyms of the IntentEntity name as comma seperated values.\r\n     * Optional when Type=IntentEntity\r\n     */\r\n    entitySynonyms?: string;\r\n\r\n    /**\r\n     * Gets the Substring match for an IntentEntity\r\n     * Optional only when Type=IntentEntity\r\n     */\r\n    subStringMatch: SubStringMatch;\r\n\r\n    /**\r\n     * Gets the Invocation Name for an IntentText.\r\n     * Optional only when Type=IntentText\r\n     */\r\n    invocationName?: string;\r\n\r\n    /**\r\n     * Gets the ReferenceGrammar id associated with a previously registered intent payload.\r\n     * Optional only when Type=Generic\r\n     */\r\n    referenceGrammar?: string;\r\n\r\n    /**\r\n     * Gets the ReferenceGrammar class name to be linked to above Reference Grammar\r\n     */\r\n    referenceGrammarClassName?: string;\r\n}\r\n"]}