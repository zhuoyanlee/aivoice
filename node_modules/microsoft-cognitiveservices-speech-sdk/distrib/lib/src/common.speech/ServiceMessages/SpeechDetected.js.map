{"version":3,"sources":["src/common.speech/ServiceMessages/SpeechDetected.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,kCAAkC;;;AAOlC,MAAa,cAAc;IAGvB,YAAoB,IAAY,EAAE,UAAkB;QAChD,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAoB,CAAC;QACnE,IAAI,CAAC,uBAAuB,CAAC,MAAM,IAAI,UAAU,CAAC;IACtD,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,IAAY,EAAE,UAAkB;QACnD,OAAO,IAAI,cAAc,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAChD,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC;IAC/C,CAAC;CACJ;AAfD,wCAeC","file":"SpeechDetected.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// speech.endDetected\r\nexport interface ISpeechDetected {\r\n    Offset: number;\r\n}\r\n\r\nexport class SpeechDetected implements ISpeechDetected {\r\n    private privSpeechStartDetected: ISpeechDetected;\r\n\r\n    private constructor(json: string, baseOffset: number) {\r\n        this.privSpeechStartDetected = JSON.parse(json) as ISpeechDetected;\r\n        this.privSpeechStartDetected.Offset += baseOffset;\r\n    }\r\n\r\n    public static fromJSON(json: string, baseOffset: number): SpeechDetected {\r\n        return new SpeechDetected(json, baseOffset);\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSpeechStartDetected.Offset;\r\n    }\r\n}\r\n"]}