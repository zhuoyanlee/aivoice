{"version":3,"sources":["src/common.speech/ServiceMessages/PhraseDetection/SpeakerDiarization.ts"],"names":[],"mappings":"AAKA;;GAEG;AACH,oBAAY,sBAAsB;IAC9B,IAAI,SAAS;IACb,QAAQ,aAAa;IACrB,SAAS,cAAc;CAC1B;AAED;;GAEG;AACH,oBAAY,gBAAgB;IACxB,UAAU,eAAe;CAC5B;AAED;;GAEG;AACH,MAAM,WAAW,kBAAkB;IAC/B;;OAEG;IACH,IAAI,CAAC,EAAE,sBAAsB,CAAC;IAE9B;;OAEG;IACH,gBAAgB,CAAC,EAAE,gBAAgB,CAAC;IAEpC;;OAEG;IACH,cAAc,CAAC,EAAE,MAAM,CAAC;IAExB;;OAEG;IACH,aAAa,CAAC,EAAE,MAAM,CAAC;IAEvB;;OAEG;IACH,oBAAoB,CAAC,EAAE,OAAO,CAAC;CAClC","file":"SpeakerDiarization.d.ts","sourcesContent":["//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\n/**\r\n * The speaker diarization mode\r\n */\r\nexport enum SpeakerDiarizationMode {\r\n    None = \"None\",\r\n    Identity = \"Identity\",\r\n    Anonymous = \"Anonymous\"\r\n}\r\n\r\n/**\r\n * The identity provider\r\n */\r\nexport enum IdentityProvider {\r\n    CallCenter = \"CallCenter\"\r\n}\r\n\r\n/**\r\n * The speaker diarization configuration\r\n */\r\nexport interface SpeakerDiarization {\r\n    /**\r\n     * The mode\r\n     */\r\n    mode?: SpeakerDiarizationMode;\r\n\r\n    /**\r\n     * The identity provider\r\n     */\r\n    identityProvider?: IdentityProvider;\r\n\r\n    /**\r\n     * A token that identifies a diarization session across reconnects\r\n     */\r\n    audioSessionId?: string;\r\n\r\n    /**\r\n     * The audio offset measured in msec to apply to the audio stream in case this is a session reconnect\r\n     */\r\n    audioOffsetMs?: number;\r\n\r\n    /**\r\n     * If set to true the diarization will be performed on the intermediate results\r\n     */\r\n    diarizeIntermediates?: boolean;\r\n}\r\n"]}