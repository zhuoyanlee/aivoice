{"version":3,"sources":["src/common.speech/ServiceMessages/PhraseOutput/PhraseOutput.ts"],"names":[],"mappings":";AAAA,EAAE;AACF,gDAAgD;AAChD,wGAAwG;AACxG,EAAE;;;AAOF;;GAEG;AACH,IAAY,YAmBX;AAnBD,WAAY,YAAY;IACpB,2CAA2B,CAAA;IAC3B,2BAAW,CAAA;IACX,+CAA+B,CAAA;IAC/B,uDAAuC,CAAA;IACvC,iDAAiC,CAAA;IACjC,+BAAe,CAAA;IACf,uCAAuB,CAAA;IACvB,mEAAmD,CAAA;IACnD,uDAAuC,CAAA;IACvC,+CAA+B,CAAA;IAC/B,+CAA+B,CAAA;IAC/B,2CAA2B,CAAA;IAC3B,2CAA2B,CAAA;IAC3B,qCAAqB,CAAA;IACrB,6CAA6B,CAAA;IAC7B,yDAAyC,CAAA;IACzC,yDAAyC,CAAA;IACzC,6CAA6B,CAAA;AACjC,CAAC,EAnBW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAmBvB;AAED;;GAEG;AACH,IAAY,eAIX;AAJD,WAAY,eAAe;IACvB,kCAAe,CAAA;IACf,8CAA2B,CAAA;IAC3B,0CAAuB,CAAA;AAC3B,CAAC,EAJW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAI1B;AAED;;GAEG;AACH,IAAY,YAGX;AAHD,WAAY,YAAY;IACpB,iCAAiB,CAAA;IACjB,qCAAqB,CAAA;AACzB,CAAC,EAHW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAGvB;AAED;;GAEG;AACH,IAAY,4BAGX;AAHD,WAAY,4BAA4B;IACpC,6CAAa,CAAA;IACb,iDAAiB,CAAA;AACrB,CAAC,EAHW,4BAA4B,GAA5B,oCAA4B,KAA5B,oCAA4B,QAGvC","file":"PhraseOutput.js","sourcesContent":["//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport { DetailedOptions } from \"./DetailedOptions\";\r\nimport { SimpleOptions } from \"./SimpleOptions\";\r\nimport { InterimResults } from \"./InterimResults\";\r\nimport { PhraseResults } from \"./PhraseResults\";\r\n\r\n/**\r\n * The detailed output options.\r\n */\r\nexport enum PhraseOption {\r\n    WordTimings = \"WordTimings\",\r\n    SNR = \"SNR\",\r\n    Pronunciation = \"Pronunciation\",\r\n    WordPronunciation = \"WordPronunciation\",\r\n    WordConfidence = \"WordConfidence\",\r\n    Words = \"Words\",\r\n    Sentiment = \"Sentiment\",\r\n    PronunciationAssessment = \"PronunciationAssessment\",\r\n    ContentAssessment = \"ContentAssessment\",\r\n    PhraseAMScore = \"PhraseAMScore\",\r\n    PhraseLMScore = \"PhraseLMScore\",\r\n    WordAMScore = \"WordAMScore\",\r\n    WordLMScore = \"WordLMScore\",\r\n    RuleTree = \"RuleTree\",\r\n    NBestTimings = \"NBestTimings\",\r\n    DecoderDiagnostics = \"DecoderDiagnostics\",\r\n    DisplayWordTimings = \"DisplayWordTimings\",\r\n    DisplayWords = \"DisplayWords\"\r\n}\r\n\r\n/**\r\n * The detailed output extensions.\r\n */\r\nexport enum PhraseExtension {\r\n    Graph = \"Graph\",\r\n    Corrections = \"Corrections\",\r\n    Sentiment = \"Sentiment\"\r\n}\r\n\r\n/**\r\n * The Recognition modes\r\n */\r\nexport enum OutputFormat {\r\n    Simple = \"Simple\",\r\n    Detailed = \"Detailed\"\r\n}\r\n\r\n/**\r\n * The Tentative Phrase Results option\r\n */\r\nexport enum TentativePhraseResultsOption {\r\n    None = \"None\",\r\n    Always = \"Always\"\r\n}\r\n\r\n/**\r\n * Defines the phrase output in the speech Context message\r\n */\r\nexport interface PhraseOutput {\r\n    /**\r\n     * The output format.\r\n     */\r\n    format?: OutputFormat;\r\n\r\n    /**\r\n     * The detailed options.\r\n     */\r\n    detailed?: DetailedOptions;\r\n\r\n    /**\r\n     * The simple options.\r\n     */\r\n    simple?: SimpleOptions;\r\n\r\n    /**\r\n     * The interim results.\r\n     */\r\n    interimResults?: InterimResults;\r\n\r\n    /**\r\n     * The phrase results.\r\n     */\r\n    phraseResults?: PhraseResults;\r\n\r\n    /**\r\n     * The tentative phrase results option\r\n     */\r\n    tentativePhraseResults?: TentativePhraseResultsOption;\r\n}\r\n"]}