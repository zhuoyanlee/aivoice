{"version":3,"sources":["src/common.speech/ServiceMessages/PronunciationScore/PronunciationAssessmentOptions.ts"],"names":[],"mappings":";AAAA,EAAE;AACF,gDAAgD;AAChD,wGAAwG;AACxG,EAAE;;;AAEF;;GAEG;AACH,IAAY,iBAGX;AAHD,WAAY,iBAAiB;IACzB,4CAAuB,CAAA;IACvB,gDAA2B,CAAA;AAC/B,CAAC,EAHW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAG5B;AAED;;GAEG;AACH,IAAY,eAIX;AAJD,WAAY,eAAe;IACvB,sCAAmB,CAAA;IACnB,gCAAa,CAAA;IACb,wCAAqB,CAAA;AACzB,CAAC,EAJW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAI1B;AAED;;GAEG;AACH,IAAY,aAGX;AAHD,WAAY,aAAa;IACrB,gCAAe,CAAA;IACf,gDAA+B,CAAA;AACnC,CAAC,EAHW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAGxB;AAED;;GAEG;AACH,IAAY,mBAGX;AAHD,WAAY,mBAAmB;IAC3B,oCAAa,CAAA;IACb,kCAAW,CAAA;AACf,CAAC,EAHW,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAG9B","file":"PronunciationAssessmentOptions.js","sourcesContent":["//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\n/**\r\n * The enum of grading system for the score\r\n */\r\nexport enum GradingSystemKind {\r\n    FivePoint = \"FivePoint\",\r\n    HundredMark = \"HundredMark\"\r\n}\r\n\r\n/**\r\n * The enum of granularity for score coverage\r\n */\r\nexport enum GranularityKind {\r\n    Phoneme = \"Phoneme\",\r\n    Word = \"Word\",\r\n    FullText = \"FullText\"\r\n}\r\n\r\n/**\r\n * The enum of dimension of the score\r\n */\r\nexport enum DimensionKind {\r\n    Basic = \"Basic\",\r\n    Comprehensive = \"Comprehensive\"\r\n}\r\n\r\n/**\r\n * The kind of phoneme alphabet\r\n */\r\nexport enum PhonemeAlphabetKind {\r\n    SAPI = \"SAPI\",\r\n    IPA = \"IPA\"\r\n}\r\n\r\n/**\r\n * The json payload for pronunciation assessment options\r\n */\r\nexport interface PronunciationAssessmentOptions {\r\n    /**\r\n     * The text that the input speech is following. This can help the assessment when provided.\r\n     */\r\n    referenceText?: string;\r\n\r\n    /**\r\n     * The grading system for the score\r\n     */\r\n    gradingSystem?: GradingSystemKind;\r\n\r\n    /**\r\n     * The granularity for score coverage\r\n     */\r\n    granularity?: GranularityKind;\r\n\r\n    /**\r\n     * The dimension of the score\r\n     */\r\n    dimension?: DimensionKind;\r\n\r\n    /**\r\n     * The phoneme alphabet\r\n     */\r\n    phonemeAlphabet?: PhonemeAlphabetKind;\r\n\r\n    /**\r\n     * The count of nbest phoneme\r\n     */\r\n    nBestPhonemeCount?: number;\r\n\r\n    /**\r\n     * Whether enable miscue or not\r\n     */\r\n    enableMiscue?: boolean;\r\n\r\n    /**\r\n     * Whether enable prosody assessment or not\r\n     */\r\n    enableProsodyAssessment?: boolean;\r\n\r\n    /**\r\n     * Whether enable two pass unscripted assessment or not\r\n     */\r\n    enableTwoPassUnscriptedAssessment?: boolean;\r\n\r\n    /**\r\n     * The scenario ID\r\n     */\r\n    scenarioId?: string;\r\n}\r\n"]}